# -*- coding: utf-8 -*-
"""FeatureDetectionAndPredictionInception.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/16dM8SU27W5YcTXkalBy3YuZlznMG68aM
"""

import pickle
import nltk
from nltk.tokenize import word_tokenize
nltk.download("punkt")
filename = 'word_features_final.txt'
from google.colab import files
files.upload()
with open(filename,'rb') as fp:
  featureset = pickle.load(fp)
with open("SentiAnalysisfinal.sav",'rb') as fp:
  loaded_model = pickle.load(fp)

#risk_words = ['not good','not bad','not nice']


#print(sentiment(loaded_model,'Not a very good workshop,not a very bad workshop'))

risk_words = {
    'not good' : 'bad',
    'not bad' : 'good',
    'not nice' : 'bad',
    'hate' : 'bad'
}

def find_features(word_features,document):
    document = document.lower()
    words = word_tokenize(document)
    document_words = set(words)
    features = {}
    for w in word_features:
        features['contains({})'.format(w)] = (w in document_words)
    for w in risk_words.keys():
        if w in document:
          features['contains({})'.format(risk_words[w])] = (w in document)
          if w != 'hate':
            features['contains({})'.format(w.split()[1])] = False
    return features

def show_features(word_features,document):
    document = document.lower()
    words = word_tokenize(document)
    document_words = set(words)
    features = {}
    for w in word_features:
        features['contains({})'.format(w)] = (w in document_words)
    for w in risk_words.keys():
        if w in document:
          features['contains({})'.format(risk_words[w])] = (w in document)
          if w != 'hate':
            features['contains({})'.format(w.split()[1])] = False
    for w in features.keys():
      if features[w] == True:
        print(w)

def sentiment(classifier,text):
    feats = find_features(featureset,text)
    return classifier.classify(feats)#, classifier.confidence(feats)
#show_features(featureset,'hate')

#print(sentiment(loaded_model,'hi'))

#print(sentiment(loaded_model,'The workshop felt like a motley of amateur speakers, huddling up and cooking up a product that looks fine on first inspection but fails to deliver any significant impact on the attendee. It leaves you with a feeling that there could have been so much more done by the organisation.'))

#loaded_model.show_most_informative_features(100)